"""Initial migration

Revision ID: ab40b0e9a784
Revises: 
Create Date: 2025-03-30 16:09:53.357995

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ab40b0e9a784'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('routes',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('short_name', sa.String(length=16), nullable=False),
    sa.Column('long_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(length=6), nullable=True),
    sa.Column('text_color', sa.String(length=6), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('agency_id', sa.String(length=36), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_alerts',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('active_from', sa.DateTime(), nullable=False),
    sa.Column('active_to', sa.DateTime(), nullable=True),
    sa.Column('affected_entities', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('header_text', sa.String(length=255), nullable=False),
    sa.Column('description_text', sa.Text(), nullable=True),
    sa.Column('cause', sa.String(length=64), nullable=True),
    sa.Column('effect', sa.String(length=64), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_status',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('subway', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('bus', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('lirr', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('metro_north', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('bridges', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('tunnels', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stops',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('zone_id', sa.String(length=36), nullable=True),
    sa.Column('parent_station', sa.String(length=36), nullable=True),
    sa.Column('wheelchair_boarding', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['parent_station'], ['stops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('display_name', sa.String(length=64), nullable=True),
    sa.Column('preferred_language', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('accessibility_status',
    sa.Column('equipment_id', sa.String(length=36), nullable=False),
    sa.Column('station_id', sa.String(length=36), nullable=False),
    sa.Column('equipment_type', sa.String(length=16), nullable=False),
    sa.Column('is_operational', sa.Boolean(), nullable=True),
    sa.Column('outage_reason', sa.String(length=255), nullable=True),
    sa.Column('estimated_return_to_service', sa.DateTime(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['stops.id'], ),
    sa.PrimaryKeyConstraint('equipment_id')
    )
    op.create_table('alerts',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('entity_id', sa.String(length=36), nullable=True),
    sa.Column('conditions', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('time_ranges', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorite_routes',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('route_id', sa.String(length=36), nullable=False),
    sa.Column('nickname', sa.String(length=64), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorite_stations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('station_id', sa.String(length=36), nullable=False),
    sa.Column('nickname', sa.String(length=64), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['stops.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('route_status',
    sa.Column('route_id', sa.String(length=36), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('alerts', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.PrimaryKeyConstraint('route_id')
    )
    op.create_table('saved_locations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('search_history',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('query', sa.String(length=255), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('result_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('station_status',
    sa.Column('station_id', sa.String(length=36), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('crowd_level', sa.Integer(), nullable=True),
    sa.Column('upcoming_arrivals', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('alerts', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['station_id'], ['stops.id'], ),
    sa.PrimaryKeyConstraint('station_id')
    )
    op.create_table('trip_history',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('origin_stop_id', sa.String(length=36), nullable=False),
    sa.Column('destination_stop_id', sa.String(length=36), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('routes_used', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['destination_stop_id'], ['stops.id'], ),
    sa.ForeignKeyConstraint(['origin_stop_id'], ['stops.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trips',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('route_id', sa.String(length=36), nullable=False),
    sa.Column('service_id', sa.String(length=36), nullable=False),
    sa.Column('direction_id', sa.Boolean(), nullable=False),
    sa.Column('shape_id', sa.String(length=36), nullable=True),
    sa.Column('is_assigned', sa.Boolean(), nullable=True),
    sa.Column('nyct_train_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_preferences',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('dark_mode', sa.Boolean(), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('push_notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('email_notifications_enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('trip_stops',
    sa.Column('trip_id', sa.String(length=36), nullable=False),
    sa.Column('stop_id', sa.String(length=36), nullable=False),
    sa.Column('arrival_time', sa.DateTime(), nullable=True),
    sa.Column('departure_time', sa.DateTime(), nullable=True),
    sa.Column('stop_sequence', sa.Integer(), nullable=False),
    sa.Column('pickup_type', sa.Integer(), nullable=True),
    sa.Column('drop_off_type', sa.Integer(), nullable=True),
    sa.Column('scheduled_track', sa.String(length=8), nullable=True),
    sa.Column('actual_track', sa.String(length=8), nullable=True),
    sa.ForeignKeyConstraint(['stop_id'], ['stops.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.PrimaryKeyConstraint('trip_id', 'stop_id', 'stop_sequence')
    )
    op.create_table('vehicle_positions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('trip_id', sa.String(length=36), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('current_stop_sequence', sa.Integer(), nullable=True),
    sa.Column('current_stop_id', sa.String(length=36), nullable=True),
    sa.Column('current_status', sa.String(length=16), nullable=True),
    sa.Column('congestion_level', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['current_stop_id'], ['stops.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vehicle_positions')
    op.drop_table('trip_stops')
    op.drop_table('user_preferences')
    op.drop_table('trips')
    op.drop_table('trip_history')
    op.drop_table('station_status')
    op.drop_table('search_history')
    op.drop_table('saved_locations')
    op.drop_table('route_status')
    op.drop_table('favorite_stations')
    op.drop_table('favorite_routes')
    op.drop_table('alerts')
    op.drop_table('accessibility_status')
    op.drop_table('users')
    op.drop_table('stops')
    op.drop_table('service_status')
    op.drop_table('service_alerts')
    op.drop_table('routes')
    # ### end Alembic commands ###
